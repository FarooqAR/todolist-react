import React from 'react';
import db from '../db';
import List from './List';
import ListItem from './ListItem';
export default class Main extends React.Component{
    
    constructor(){
        super();
        this.state = {todoList: null};
        

        this.refreshState();
        // bind the methods to this Object(Main) as they're going to get called by other component
        this.deleteTodo = this.deleteTodo.bind(this);
        this.modifyTodo = this.modifyTodo.bind(this);
    }
    
    addTodo() {    
        var todoInput = document.getElementById("todo_input");
        var todoText = todoInput.value;
        
        var that = this;
        if(todoText.length > 0 && todoText !== null && todoText !== ""){
            
            db.put({
                _id: String(Date.now()),
                text: todoText
            }).then(function (response) {
                todoInput.value = '';
                todoInput.focus();

                if(response.ok)
                    that.refreshState();
            }).catch(function (err) {
                console.log(err);
            });
        }
        
    }
    deleteTodo(todo){
        var that = this;
        db.get(todo._id).then(function(doc) {
            return db.remove(doc);
        }).then(function (response) {    
            if(response.ok)
                that.refreshState();
        }).catch(function (err) {
            console.log(err);
        });
        
    }
    modifyTodo(todo){//todo = {_id: time_in_milliseconds, text:string}
        var that = this;
        db.get(todo._id).then(function(doc) {
            // _rev property is auto generated by pouchdb every time a new doc is added
            // Pouchdb requires _rev property to be in the modified object or it will reject the writes 
            return db.put({
                _id: doc._id,
                _rev: doc._rev, 
                text: todo.text
            });
        }).then(function(response) {
            if(response.ok)
                that.refreshState();
        }).catch(function (err) {
            console.log(err);
        });
    }

    refreshState(){
        var that = this;
        db.allDocs({
            include_docs: true,
            attachments: true
        }).then(function (result) {

            var list = result.rows.map(function(e, i){
                var todo = e.doc;
                return <ListItem key={i.toString()} time={todo._id} text={todo.text} deleteTodo = {that.deleteTodo} modifyTodo = {that.modifyTodo}/>;
            });
            that.setState({todoList: list.reverse()});
            
        }).catch(function (err) {
            console.log(err.reason);
        });
    }
    render(){
        return (
            <div class="main">
                <div className="form">
                    <input type="text" id="todo_input" placeholder="Enter a Task"/>
                    <button onClick={this.addTodo.bind(this)}>Add</button>
                </div>
                <List list={this.state.todoList}/>
            </div>
        );
    }
}